{"version":3,"sources":["Components/Container/containerStyle.module.css","Components/Notification/notification.module.css","Components/Container/Container.js","Components/Sections/Section.js","Components/Notification/Notifications.js","Components/Options/Options.js","Components/stats/stats.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","Section","Notification","message","messageItem","FeedbackOptions","onChangeStats","item","ButtonGroup","Button","type","name","button_good","onClick","e","currentTarget","button_neutral","button_bad","Stats","stats","good","neutral","bad","total","getPositive","totalDiv","titleItem","App","state","handleChangeStats","setState","prev","getTotal","getPositivePercentage","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,kCAAkC,OAAS,+BAA+B,YAAc,iEAAiE,eAAiB,oEAAoE,WAAa,gEAAgE,OAAS,+BAA+B,SAAW,iCAAiC,MAAQ,gC,wCCArbD,EAAOC,QAAU,CAAC,YAAc,oC,sMCOjBC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,KCAtBG,EAHC,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,SACjB,OAAO,8BAAMA,K,iBCGAI,EAHM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAIJ,UAAWC,IAAOI,YAAtB,SAAoCD,K,gBC0CvBE,EAxCS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACzB,OACE,qCACE,oBAAIP,UAAWC,IAAOO,KAAtB,mCACA,eAACC,EAAA,EAAD,CAAc,aAAW,iCAAzB,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,KAAK,OACLZ,UAAWC,IAAOY,YAClBC,QAAS,SAACC,GACRR,EAAcQ,EAAEC,cAAcJ,OALlC,kBAUA,cAACF,EAAA,EAAD,CACEC,KAAK,SACLC,KAAK,UACLZ,UAAWC,IAAOgB,eAClBH,QAAS,SAACC,GACRR,EAAcQ,EAAEC,cAAcJ,OALlC,qBAUA,cAACF,EAAA,EAAD,CAEEC,KAAK,SACLC,KAAK,MACLZ,UAAWC,IAAOiB,WAClBJ,QAAS,SAACC,GACRR,EAAcQ,EAAEC,cAAcJ,OANlC,wB,iBCZOO,EAfD,SAAC,GAA2D,IAAD,IAAxDC,MAASC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAOC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACrD,OACE,qCACE,oBAAGzB,UAAWC,IAAOO,KAArB,oBAAmCa,EAAnC,OACA,oBAAGrB,UAAWC,IAAOO,KAArB,uBAAsCc,KACtC,oBAAGtB,UAAWC,IAAOO,KAArB,mBAAkCe,EAAlC,OACA,sBAAKvB,UAAWC,IAAOyB,SAAvB,UACE,oBAAG1B,UAAWC,IAAO0B,UAArB,oBAAwCH,EAAxC,OACA,oBAAGxB,UAAWC,IAAO0B,UAArB,kCACyBF,EADzB,eC0COG,E,4MA5CbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,kBAAoB,SAAClB,GACnB,EAAKmB,UAAS,SAACC,GAAD,sBACXpB,EAAOoB,EAAKpB,GAAQ,O,EAIzBqB,SAAW,WACT,MAA+B,EAAKJ,MACpC,OADA,EAAQR,KAAR,EAAcE,IAAd,EAAmBD,S,EAIrBY,sBAAwB,WACtB,IAAQb,EAAS,EAAKQ,MAAdR,KACR,OAAOc,KAAKC,MAAOf,EAAO,EAAKY,WAAc,M,4CAG/C,WACE,OACE,mCACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAiB1B,cAAe8B,KAAKP,oBACpCO,KAAKJ,WACJ,cAAC,EAAD,CACEb,MAAOiB,KAAKR,MACZL,MAAOa,KAAKJ,WACZR,YAAaY,KAAKH,0BAGpB,cAAC,EAAD,CAAc9B,QAAQ,sM,GApClBkC,aCGHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9e5dae0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"containerStyle_Container__2-1Th\",\"button\":\"containerStyle_button__1zFFo\",\"button_good\":\"containerStyle_button_good__zH76k containerStyle_button__1zFFo\",\"button_neutral\":\"containerStyle_button_neutral__39T39 containerStyle_button__1zFFo\",\"button_bad\":\"containerStyle_button_bad__mKg7g containerStyle_button__1zFFo\",\"active\":\"containerStyle_active__1_fXj\",\"disabled\":\"containerStyle_disabled__20Q6b\",\"title\":\"containerStyle_title__3Lfru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageItem\":\"notification_messageItem__2Knw4\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./containerStyle.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","import React from \"react\";\r\n\r\nconst Section = ({ children }) => {\r\n  return <div>{children}</div>;\r\n};\r\nexport default Section;","import React from \"react\";\r\nimport styles from '../Notification/notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <h2 className={styles.messageItem}>{message}</h2>\r\n);\r\nexport default Notification;","import React from \"react\";\r\nimport styles from \"../Container/containerStyle.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\n\r\nconst FeedbackOptions = ({ onChangeStats }) => {\r\n  return (\r\n    <>\r\n      <h1 className={styles.item}>Please leave feedback</h1>\r\n      <ButtonGroup  aria-label=\"contained primary button group\">\r\n        <Button\r\n          type=\"button\"\r\n          name=\"good\"\r\n          className={styles.button_good}\r\n          onClick={(e) => {\r\n            onChangeStats(e.currentTarget.name);\r\n          }}\r\n        >\r\n          good\r\n        </Button>\r\n        <Button\r\n          type=\"button\"\r\n          name=\"neutral\"\r\n          className={styles.button_neutral}\r\n          onClick={(e) => {\r\n            onChangeStats(e.currentTarget.name);\r\n          }}\r\n        >\r\n          neutral\r\n        </Button>\r\n        <Button\r\n          \r\n          type=\"button\"\r\n          name=\"bad\"\r\n          className={styles.button_bad}\r\n          onClick={(e) => {\r\n            onChangeStats(e.currentTarget.name);\r\n          }}\r\n        >\r\n          bad\r\n        </Button>\r\n      </ButtonGroup>\r\n    </>\r\n  );\r\n};\r\nexport default FeedbackOptions;","import React from \"react\";\nimport styles from '../stats/stats.css';\n\n\nconst Stats = ({ stats: { good, neutral, bad }, total, getPositive }) => {\n  return (\n    <>\n      <p className={styles.item}> Good: {good} </p>\n      <p className={styles.item}> Neutral: {neutral}</p>\n      <p className={styles.item}> Bad: {bad} </p>\n      <div className={styles.totalDiv}>\n        <p className={styles.titleItem}>Total: {total} </p>\n        <p className={styles.titleItem}>\n           Positive percentage: {getPositive} %\n        </p>\n      </div>\n    </>\n  );\n};\nexport default Stats;","import { Component } from \"react\";\nimport \"./App.css\";\n\nimport Container from \"./Components/Container\";\nimport Sections from \"./Components/Sections/Section\";\nimport Notification from \"./Components/Notification/Notifications\";\nimport FeedbackOptions from \"./Components/Options/Options\";\nimport Stats from \"./Components/stats/stats\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChangeStats = (name) => {\n    this.setState((prev) => ({\n      [name]: prev[name] + 1,\n    }));\n  };\n\n  getTotal = () => {\n    const { good, bad, neutral } = this.state;\n    return good + bad + neutral;\n  };\n\n  getPositivePercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.getTotal()) * 100);\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Sections>\n            <FeedbackOptions onChangeStats={this.handleChangeStats} />\n            {this.getTotal() ? (\n              <Stats\n                stats={this.state}\n                total={this.getTotal()}\n                getPositive={this.getPositivePercentage()}\n              />\n            ) : (\n              <Notification message=\"𝙽𝚘 𝚏𝚎𝚎𝚍𝚋𝚊𝚌𝚔 𝚐𝚒𝚟𝚎𝚗\" />\n            )}\n          </Sections>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}